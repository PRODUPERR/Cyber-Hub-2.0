--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v90=v5(v83,v19);v19=nil;return v90;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-((1890 -(226 + 1044)) -(555 + 64)))) + (932 -((1221 -364) + 74)))) ;return v84-(v84%(569 -(367 + (1266 -(68 + 997))))) ;else local v85=927 -(214 + 713) ;local v86;while true do if (v85==(0 + 0)) then v86=(1 + 1)^(v32-(878 -(282 + 595))) ;return (((v31%(v86 + v86))>=v86) and (1638 -(1523 + 114))) or (0 + 0) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==(118 -(32 + 85))) then return v35;end if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=1;end end end local function v22() local v36=0 + (180 -(67 + 113)) ;local v37;local v38;while true do if (v36==1) then return (v38 * ((890 + 323) -(892 + 65))) + v37 ;end if (v36==(0 -0)) then v37,v38=v1(v16,v18,v18 + ((7 -4) -1) );v18=v18 + ((3 + 0) -1) ;v36=351 -(87 + 263) ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + (11 -8) );v18=v18 + (956 -(802 + 150)) ;return (v42 * (45169940 -28392724)) + (v41 * 65536) + (v40 * 256) + v39 ;end local function v24() local v43=0 -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==((773 -(201 + 571)) + 0)) then v46=(2136 -(116 + 1022)) -(915 + 82) ;v47=(v20(v45,1,56 -36 ) * (2^(19 + 13))) + v44 ;v43=2 -0 ;end if (v43==(1189 -(1069 + (491 -373)))) then v48=v20(v45,47 -26 ,(40 + 27) -36 );v49=((v20(v45,(21 -15) + 26 )==(1 -(0 -0))) and  -((860 -(814 + 45)) + 0)) or (792 -(368 + 423)) ;v43=3;end if (v43==0) then v44=v23();v45=v23();v43=3 -2 ;end if (v43==3) then if (v48==(18 -(10 + 8))) then if (v47==0) then return v49 * ((0 -0) -0) ;else v48=443 -(416 + 26) ;v46=(0 + 0) -0 ;end elseif (v48==(879 + 1168)) then return ((v47==(0 -0)) and (v49 * ((439 -(145 + 293))/(430 -(44 + 386))))) or (v49 * NaN) ;end return v8(v49,v48-(2509 -(998 + 173 + 315)) ) * (v46 + (v47/(((886 -(261 + 624)) + 1)^(43 + 9)))) ;end end end local function v25(v50) local v51=0 -0 ;local v52;local v53;while true do if (v51==(1082 -(1020 + 60))) then v53={};for v91=1424 -(630 + 793) , #v52 do v53[v91]=v2(v1(v3(v52,v91,v91)));end v51=9 -(3 + 3) ;end if ((14 -11)==v51) then return v6(v53);end if (v51==(1 + 0)) then v52=v3(v16,v18,(v18 + v50) -1 );v18=v18 + v50 ;v51=6 -4 ;end if (v51==(1747 -(760 + 987))) then v52=nil;if  not v50 then v50=v23();if (v50==(1913 -(1789 + (341 -217)))) then return "";end end v51=(3008 -2241) -(745 + 21) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=0 + 0 ;local v55;local v56;local v57;local v58;local v59;local v60;while true do local v67=0;while true do if (v67==(0 + 0)) then if (v54==(0 + 0)) then local v97=0 -0 ;while true do if (v97~=(1263 -(1091 + 171))) then else v57={};v58={v55,v56,nil,v57};v97=2;end if (v97==(1583 -(1535 + 46))) then v54=1;break;end if (v97~=(374 -(123 + 251))) then else v55={};v56={};v97=1 + 0 ;end end end if (v54~=(4 -3)) then else v59=v23();v60={};for v99=699 -(208 + 490) ,v59 do local v100=0 + 0 ;local v101;local v102;local v103;while true do if (v100==1) then v103=nil;while true do if (v101~=0) then else local v114=0 + 0 ;local v115;while true do if (v114~=(836 -(660 + 176))) then else v115=0 + 0 ;while true do if ((203 -(14 + 188))==v115) then v101=676 -(534 + 141) ;break;end if (v115==0) then v102=v21();v103=nil;v115=1 + 0 ;end end break;end end end if (v101~=(1 + 0)) then else if (v102==(1 + 0)) then v103=v21()~=(0 + 0) ;elseif (v102==(4 -2)) then v103=v24();elseif (v102~=3) then else v103=v25();end v60[v99]=v103;break;end end break;end if ((603 -(268 + 335))~=v100) then else local v109=0 -0 ;while true do if (v109==0) then v101=0 -0 ;v102=nil;v109=573 -(426 + 146) ;end if (v109~=1) then else v100=2 -1 ;break;end end end end end v58[2 + 1 ]=v21();v54=2 + 0 ;end v67=1;end if (v67==(812 -(569 + 242))) then if (v54~=2) then else for v104=1,v23() do local v105=396 -(115 + 281) ;local v106;while true do if (v105~=(0 -0)) then else v106=v21();if (v20(v106,2 -1 ,1 + 0 )~=(0 + 0)) then else local v110=0 -0 ;local v111;local v112;local v113;while true do if (v110~=1) then else v113={v22(),v22(),nil,nil};if (v111==(0 -0)) then local v309=867 -(550 + 317) ;local v310;while true do if ((0 -0)==v309) then v310=0 + 0 ;while true do if (v310==(0 -0)) then v113[3 + 0 ]=v22();v113[11 -7 ]=v22();break;end end break;end end elseif (v111==1) then v113[3]=v23();elseif (v111==(287 -(134 + 151))) then v113[1668 -(970 + 695) ]=v23() -(2^16) ;elseif (v111==(1503 -(1408 + 92))) then local v399=1086 -(461 + 625) ;local v400;while true do if (v399~=(0 -0)) then else v400=0;while true do if ((1990 -(582 + 1408))==v400) then v113[1291 -(993 + 295) ]=v23() -(2^(55 -39)) ;v113[1175 -(418 + 753) ]=v22();break;end end break;end end end v110=2;end if (v110==(2 -0)) then if (v20(v112,1 + 0 ,3 -2 )==1) then v113[1826 -(1195 + 629) ]=v60[v113[2]];end if (v20(v112,2,2 -0 )~=(242 -(187 + 54))) then else v113[1 + 2 ]=v60[v113[3]];end v110=1 + 2 ;end if ((529 -(406 + 123))~=v110) then else v111=v20(v106,2,3);v112=v20(v106,784 -(162 + 618) ,5 + 1 );v110=1;end if (v110~=(2 + 1)) then else if (v20(v112,6 -3 ,4 -1 )~=1) then else v113[1 + 3 ]=v60[v113[1326 -(1249 + 73) ]];end v55[v104]=v113;break;end end end break;end end end for v107=1 + 0 ,v23() do v56[v107-(1 + 0) ]=v28();end return v58;end break;end end end end local function v29(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...) local v68=v64;local v69=v65;local v70=v66;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + 1 ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=34) then if (v81<=16) then if (v81<=7) then if (v81<=3) then if (v81<=1) then if (v81>0) then local v117=v80[2];local v118=v78[v80[3]];v78[v117 + 1 ]=v118;v78[v117]=v118[v80[4]];elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==2) then v72=v80[3];else local v123=v80[2];local v124=v78[v123];local v125=v80[3];for v232=1,v125 do v124[v232]=v78[v123 + v232 ];end end elseif (v81<=5) then if (v81>4) then for v235=v80[2],v80[3] do v78[v235]=nil;end else local v126=v80[2];local v127,v128=v71(v78[v126](v13(v78,v126 + 1 ,v80[3])));v73=(v128 + v126) -1 ;local v129=0;for v237=v126,v73 do local v238=0;while true do if (v238==0) then v129=v129 + 1 ;v78[v237]=v127[v129];break;end end end end elseif (v81==6) then local v130=v80[2];v78[v130]=v78[v130](v78[v130 + 1 ]);else local v132=v80[3];local v133=v78[v132];for v239=v132 + 1 ,v80[4] do v133=v133   .. v78[v239] ;end v78[v80[2]]=v133;end elseif (v81<=11) then if (v81<=9) then if (v81>8) then local v135=0;local v136;while true do if (v135==0) then v136=v80[2];v78[v136](v78[v136 + 1 ]);break;end end else v78[v80[2]]();end elseif (v81==10) then v78[v80[2]]=v80[3];else local v139=v80[2];local v140,v141=v71(v78[v139](v13(v78,v139 + 1 ,v80[3])));v73=(v141 + v139) -1 ;local v142=0;for v240=v139,v73 do local v241=0;while true do if (v241==0) then v142=v142 + 1 ;v78[v240]=v140[v142];break;end end end end elseif (v81<=13) then if (v81>12) then v78[v80[2]]=v78[v80[3]];elseif v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=14) then local v145=v80[2];local v146,v147=v71(v78[v145](v78[v145 + 1 ]));v73=(v147 + v145) -1 ;local v148=0;for v242=v145,v73 do local v243=0;while true do if (v243==0) then v148=v148 + 1 ;v78[v242]=v146[v148];break;end end end elseif (v81>15) then v78[v80[2]][v80[3]]=v78[v80[4]];else local v273=v80[2];local v274={};for v318=1, #v77 do local v319=v77[v318];for v351=0, #v319 do local v352=v319[v351];local v353=v352[1];local v354=v352[2];if ((v353==v78) and (v354>=v273)) then v274[v354]=v353[v354];v352[1]=v274;end end end end elseif (v81<=25) then if (v81<=20) then if (v81<=18) then if (v81==17) then local v149=0;local v150;while true do if (v149==0) then v150=v80[2];v78[v150]=v78[v150](v78[v150 + 1 ]);break;end end else local v151=v80[2];local v152={v78[v151](v13(v78,v151 + 1 ,v73))};local v153=0;for v244=v151,v80[4] do local v245=0;while true do if (v245==0) then v153=v153 + 1 ;v78[v244]=v152[v153];break;end end end end elseif (v81>19) then local v154=0;local v155;while true do if (v154==0) then v155=v80[2];v78[v155]=v78[v155](v13(v78,v155 + 1 ,v80[3]));break;end end else local v156=v80[2];local v157=v78[v80[3]];v78[v156 + 1 ]=v157;v78[v156]=v157[v80[4]];end elseif (v81<=22) then if (v81>21) then local v161=v80[2];local v162=v80[4];local v163=v161 + 2 ;local v164={v78[v161](v78[v161 + 1 ],v78[v163])};for v246=1,v162 do v78[v163 + v246 ]=v164[v246];end local v165=v164[1];if v165 then v78[v163]=v165;v72=v80[3];else v72=v72 + 1 ;end else local v166=v80[2];local v167=v80[4];local v168=v166 + 2 ;local v169={v78[v166](v78[v166 + 1 ],v78[v168])};for v249=1,v167 do v78[v168 + v249 ]=v169[v249];end local v170=v169[1];if v170 then local v277=0;while true do if (v277==0) then v78[v168]=v170;v72=v80[3];break;end end else v72=v72 + 1 ;end end elseif (v81<=23) then local v171=0;local v172;while true do if (v171==0) then v172=v80[2];v78[v172](v78[v172 + 1 ]);break;end end elseif (v81==24) then local v278=v80[2];v78[v278](v13(v78,v278 + 1 ,v80[3]));else local v279=v80[2];v78[v279](v13(v78,v279 + 1 ,v80[3]));end elseif (v81<=29) then if (v81<=27) then if (v81>26) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v29(v69[v80[3]],nil,v63);end elseif (v81==28) then if (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else do return;end end elseif (v81<=31) then if (v81==30) then v78[v80[2]]=v29(v69[v80[3]],nil,v63);else local v175=v80[2];v78[v175]=v78[v175]();end elseif (v81<=32) then local v177=v80[2];v78[v177](v13(v78,v177 + 1 ,v73));elseif (v81>33) then local v282=v80[2];local v283,v284=v71(v78[v282](v78[v282 + 1 ]));v73=(v284 + v282) -1 ;local v285=0;for v325=v282,v73 do local v326=0;while true do if (v326==0) then v285=v285 + 1 ;v78[v325]=v283[v285];break;end end end else local v286=0;local v287;while true do if (v286==0) then v287=v80[2];v78[v287]=v78[v287](v13(v78,v287 + 1 ,v73));break;end end end elseif (v81<=52) then if (v81<=43) then if (v81<=38) then if (v81<=36) then if (v81==35) then local v178=0;local v179;local v180;local v181;while true do if (1==v178) then v181=0;for v357=v179,v80[4] do v181=v181 + 1 ;v78[v357]=v180[v181];end break;end if (v178==0) then v179=v80[2];v180={v78[v179](v13(v78,v179 + 1 ,v73))};v178=1;end end else local v182=v80[2];local v183,v184=v71(v78[v182]());v73=(v184 + v182) -1 ;local v185=0;for v252=v182,v73 do local v253=0;while true do if (v253==0) then v185=v185 + 1 ;v78[v252]=v183[v185];break;end end end end elseif (v81==37) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v186=v80[2];local v187=v78[v186];for v254=v186 + 1 ,v80[3] do v7(v187,v78[v254]);end end elseif (v81<=40) then if (v81>39) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v190=v80[3];local v191=v78[v190];for v255=v190 + 1 ,v80[4] do v191=v191   .. v78[v255] ;end v78[v80[2]]=v191;end elseif (v81<=41) then v78[v80[2]]=v63[v80[3]];elseif (v81==42) then if (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else do return;end end elseif (v81<=47) then if (v81<=45) then if (v81>44) then local v195=0;local v196;local v197;local v198;while true do if (2==v195) then for v363=1,v80[4] do local v364=0;local v365;while true do if (v364==0) then v72=v72 + 1 ;v365=v68[v72];v364=1;end if (v364==1) then if (v365[1]==13) then v198[v363-1 ]={v78,v365[3]};else v198[v363-1 ]={v62,v365[3]};end v77[ #v77 + 1 ]=v198;break;end end end v78[v80[2]]=v29(v196,v197,v63);break;end if (0==v195) then v196=v69[v80[3]];v197=nil;v195=1;end if (1==v195) then v198={};v197=v10({},{__index=function(v366,v367) local v368=v198[v367];return v368[1][v368[2]];end,__newindex=function(v369,v370,v371) local v372=v198[v370];v372[1][v372[2]]=v371;end});v195=2;end end else v78[v80[2]]=v78[v80[3]];end elseif (v81>46) then v72=v80[3];else local v202=0;local v203;local v204;local v205;while true do if (v202==1) then v205=0;for v374=v203,v80[4] do v205=v205 + 1 ;v78[v374]=v204[v205];end break;end if (v202==0) then v203=v80[2];v204={v78[v203](v78[v203 + 1 ])};v202=1;end end end elseif (v81<=49) then if (v81>48) then v78[v80[2]]=v78[v80[3]][v80[4]];elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=50) then v78[v80[2]]={};elseif (v81==51) then for v331=v80[2],v80[3] do v78[v331]=nil;end else local v290=v80[2];local v291={v78[v290](v78[v290 + 1 ])};local v292=0;for v333=v290,v80[4] do v292=v292 + 1 ;v78[v333]=v291[v292];end end elseif (v81<=61) then if (v81<=56) then if (v81<=54) then if (v81==53) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==55) then v78[v80[2]]=v62[v80[3]];else v78[v80[2]]();end elseif (v81<=58) then if (v81==57) then local v211=v80[2];v78[v211](v13(v78,v211 + 1 ,v73));else v78[v80[2]]=v62[v80[3]];end elseif (v81<=59) then v78[v80[2]]={};elseif (v81>60) then local v295=v80[2];local v296=v78[v295];local v297=v80[3];for v336=1,v297 do v296[v336]=v78[v295 + v336 ];end else local v298=v80[2];v78[v298]=v78[v298]();end elseif (v81<=65) then if (v81<=63) then if (v81>62) then v78[v80[2]][v80[3]]=v78[v80[4]];else v78[v80[2]]=v80[3];end elseif (v81==64) then local v219=v69[v80[3]];local v220;local v221={};v220=v10({},{__index=function(v256,v257) local v258=v221[v257];return v258[1][v258[2]];end,__newindex=function(v259,v260,v261) local v262=v221[v260];v262[1][v262[2]]=v261;end});for v264=1,v80[4] do v72=v72 + 1 ;local v265=v68[v72];if (v265[1]==13) then v221[v264-1 ]={v78,v265[3]};else v221[v264-1 ]={v62,v265[3]};end v77[ #v77 + 1 ]=v221;end v78[v80[2]]=v29(v219,v220,v63);else local v223=v80[2];local v224={};for v267=1, #v77 do local v268=v77[v267];for v300=0, #v268 do local v301=0;local v302;local v303;local v304;while true do if (v301==1) then v304=v302[2];if ((v303==v78) and (v304>=v223)) then local v396=0;while true do if (v396==0) then v224[v304]=v303[v304];v302[1]=v224;break;end end end break;end if (v301==0) then v302=v268[v300];v303=v302[1];v301=1;end end end end end elseif (v81<=67) then if (v81>66) then local v225=v80[2];v78[v225]=v78[v225](v13(v78,v225 + 1 ,v80[3]));else local v227=0;local v228;while true do if (v227==0) then v228=v80[2];v78[v228]=v78[v228](v13(v78,v228 + 1 ,v73));break;end end end elseif (v81<=68) then v78[v80[2]]=v63[v80[3]];elseif (v81==69) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v305=v80[2];local v306,v307=v71(v78[v305]());v73=(v307 + v305) -1 ;local v308=0;for v343=v305,v73 do local v344=0;while true do if (v344==0) then v308=v308 + 1 ;v78[v343]=v306[v308];break;end end end end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
