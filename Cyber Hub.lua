--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v102=v5(v84,v19);v19=nil;return v102;else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=0 -0 ;local v86;while true do if (v85==(0 -0)) then v86=(v31/(2^(v32-((878 -(282 + 595)) -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -(367 + 201)))) ;return v86-(v86%1) ;end end else local v87=(1639 -(1523 + 114))^(v32-(928 -(214 + 641 + 72))) ;return (((v31%(v87 + v87))>=v87) and (1 + 0)) or ((0 -0) + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=1065 -(68 + 997) ;local v36;local v37;while true do if (v35==((282 + 988) -(226 + 1044))) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (8 -6) ;v35=118 -(32 + 85) ;end if (v35==(1 + 0)) then return (v37 * 256) + v36 ;end end end local function v23() local v38=957 -(892 + (258 -193)) ;local v39;local v40;local v41;local v42;while true do if (v38==((954 -(802 + 150)) -1)) then return (v42 * (31011612 -14234396)) + (v41 * ((323920 -203608) -54776)) + (v40 * (606 -(87 + 263))) + v39 ;end if (v38==(180 -(67 + 113))) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (9 -5) ;v38=1 + 0 ;end end end local function v24() local v43=0 -(0 -0) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(1 + 0)) then v46=998 -(915 + 82) ;v47=(v20(v45,2 -1 ,(1425 -(447 + 966)) + 8 ) * ((774 -(201 + 571))^(41 -9))) + v44 ;v43=8 -6 ;end if (v43==(2 + 1)) then if (v48==(1187 -(1069 + 118))) then if (v47==(0 -(0 -0))) then return v49 * (0 -(0 + 0)) ;else local v103=(2676 -(1703 + 114)) -(814 + 45) ;while true do if (v103==(0 -0)) then v48=(702 -(376 + 325)) + 0 ;v46=0 + 0 ;break;end end end elseif (v48==(3636 -1589)) then return ((v47==(0 + 0)) and (v49 * ((1 -0)/(791 -(368 + 423))))) or (v49 * NaN) ;end return v8(v49,v48-(3214 -2191) ) * (v46 + (v47/((20 -(8 + 2 + 8))^(199 -147)))) ;end if (v43==(442 -((1471 -(87 + 968)) + 26))) then v44=v23();v45=v23();v43=3 -2 ;end if (v43==2) then v48=v20(v45,(316 -244) -51 ,14 + 17 );v49=((v20(v45,56 -24 )==((399 + 40) -(145 + 293))) and  -(431 -(44 + 386))) or (1 + 0) ;v43=1489 -(998 + (799 -311)) ;end end end local function v25(v50) local v51=0 -(254 -(163 + 91)) ;local v52;local v53;while true do if (v51==(0 + 0)) then v52=nil;if  not v50 then local v97=(1930 -(1869 + 61)) -0 ;while true do if (v97==(14 -(9 + 5))) then v50=v23();if (v50==0) then return "";end break;end end end v51=377 -(85 + 291) ;end if (v51==(1267 -(68 + 175 + 1022))) then v53={};for v91=1, #v52 do v53[v91]=v2(v1(v3(v52,v91,v91)));end v51=11 -8 ;end if (v51==1) then v52=v3(v16,v18,(v18 + v50) -(1 + (0 -0)) );v18=v18 + v50 ;v51=1182 -((1724 -601) + 8 + 49) ;end if (v51==(3 + 0)) then return v6(v53);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=0 -0 ;local v55;local v56;local v57;local v58;local v59;local v60;while true do local v67=0 -0 ;while true do if (v67==0) then if (v54==1) then local v98=0;local v99;while true do if (v98==(0 -0)) then v99=603 -(268 + 335) ;while true do if (v99~=2) then else v54=2;break;end if (0==v99) then v59=v23();v60={};v99=291 -(60 + 230) ;end if (v99~=(573 -(426 + 146))) then else for v117=1,v59 do local v118=0;local v119;local v120;local v121;while true do if (v118==0) then local v273=0;while true do if (v273==0) then v119=0 + 0 ;v120=nil;v273=1457 -(282 + 1174) ;end if (v273==1) then v118=812 -(569 + 242) ;break;end end end if (1~=v118) then else v121=nil;while true do if (v119==0) then local v393=0;local v394;while true do if ((0 -0)~=v393) then else v394=0;while true do if (v394==(0 + 0)) then v120=v21();v121=nil;v394=1;end if (v394==(1025 -(706 + 318))) then v119=1;break;end end break;end end end if (v119~=1) then else if (v120==1) then v121=v21()~=(1251 -(721 + 530)) ;elseif (v120==(1273 -(945 + 326))) then v121=v24();elseif (v120==(7 -4)) then v121=v25();end v60[v117]=v121;break;end end break;end end end v58[3 + 0 ]=v21();v99=2;end end break;end end end if (v54~=0) then else local v100=700 -(271 + 429) ;local v101;while true do if (v100==(0 + 0)) then v101=1500 -(1408 + 92) ;while true do if (v101~=(1086 -(461 + 625))) then else v55={};v56={};v101=1;end if (v101~=(1289 -(993 + 295))) then else v57={};v58={v55,v56,nil,v57};v101=2;end if (v101~=2) then else v54=1;break;end end break;end end end v67=1;end if (v67==(1172 -(418 + 753))) then if (v54==(1 + 1)) then for v104=1,v23() do local v105=v21();if (v20(v105,1,1 + 0 )~=(0 + 0)) then else local v108=0;local v109;local v110;local v111;local v112;while true do if (v108==0) then local v114=0;while true do if (v114==(1 + 0)) then v108=1;break;end if (v114~=(529 -(406 + 123))) then else v109=1769 -(1749 + 20) ;v110=nil;v114=1 + 0 ;end end end if (v108~=(1324 -(1249 + 73))) then else while true do if (v109==(0 + 0)) then local v238=0;local v239;while true do if ((1145 -(466 + 679))==v238) then v239=0 -0 ;while true do if (v239==(2 -1)) then v109=1901 -(106 + 1794) ;break;end if (0~=v239) then else v110=v20(v105,2,1 + 2 );v111=v20(v105,2 + 2 ,6);v239=2 -1 ;end end break;end end end if (v109==(5 -3)) then local v240=114 -(4 + 110) ;local v241;while true do if (v240==(584 -(57 + 527))) then v241=1427 -(41 + 1386) ;while true do if (v241==(104 -(17 + 86))) then v109=3;break;end if (0==v241) then if (v20(v111,1 + 0 ,1)==(1 -0)) then v112[5 -3 ]=v60[v112[2]];end if (v20(v111,2,2)~=1) then else v112[169 -(122 + 44) ]=v60[v112[3]];end v241=1;end end break;end end end if (v109==3) then if (v20(v111,5 -2 ,3)~=1) then else v112[4]=v60[v112[12 -8 ]];end v55[v104]=v112;break;end if (v109~=(1 + 0)) then else local v243=0 + 0 ;while true do if (v243~=(1 -0)) then else v109=67 -(30 + 35) ;break;end if (v243==0) then v112={v22(),v22(),nil,nil};if (v110==(1257 -(1043 + 214))) then local v412=0 -0 ;local v413;while true do if (v412==(1212 -(323 + 889))) then v413=0;while true do if (v413==0) then v112[3]=v22();v112[10 -6 ]=v22();break;end end break;end end elseif (v110==(581 -(361 + 219))) then v112[3]=v23();elseif (v110==(322 -(53 + 267))) then v112[3]=v23() -(2^(4 + 12)) ;elseif (v110==3) then local v451=0;local v452;while true do if (v451~=(413 -(15 + 398))) then else v452=0;while true do if (v452~=0) then else v112[985 -(18 + 964) ]=v23() -((7 -5)^(10 + 6)) ;v112[3 + 1 ]=v22();break;end end break;end end end v243=1;end end end end break;end if (v108==(851 -(20 + 830))) then local v115=0 + 0 ;local v116;while true do if (v115==0) then v116=0;while true do if (v116~=1) then else v108=128 -(116 + 10) ;break;end if (0~=v116) then else v111=nil;v112=nil;v116=1;end end break;end end end end end end for v106=1,v23() do v56[v106-(1 + 0) ]=v28();end return v58;end break;end end end end local function v29(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...) local v68=v64;local v69=v65;local v70=v66;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v88=0,v76 do if (v88>=v70) then v74[v88-v70 ]=v75[v88 + 1 ];else v78[v88]=v75[v88 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=34) then if (v81<=16) then if (v81<=7) then if (v81<=3) then if (v81<=1) then if (v81==0) then v78[v80[2]]=v62[v80[3]];elseif v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==2) then if (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v124=0;local v125;local v126;while true do if (v124==0) then v125=v80[3];v126=v78[v125];v124=1;end if (v124==1) then for v368=v125 + 1 ,v80[4] do v126=v126   .. v78[v368] ;end v78[v80[2]]=v126;break;end end end elseif (v81<=5) then if (v81==4) then do return;end else local v127=v80[2];local v128=v80[4];local v129=v127 + 2 ;local v130={v78[v127](v78[v127 + 1 ],v78[v129])};for v244=1,v128 do v78[v129 + v244 ]=v130[v244];end local v131=v130[1];if v131 then v78[v129]=v131;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81==6) then v78[v80[2]]();else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=11) then if (v81<=9) then if (v81>8) then local v134=v80[2];local v135,v136=v71(v78[v134]());v73=(v136 + v134) -1 ;local v137=0;for v247=v134,v73 do v137=v137 + 1 ;v78[v247]=v135[v137];end else v72=v80[3];end elseif (v81>10) then do return;end else v78[v80[2]]=v29(v69[v80[3]],nil,v63);end elseif (v81<=13) then if (v81==12) then v78[v80[2]]=v63[v80[3]];else v78[v80[2]]={};end elseif (v81<=14) then local v143=0;local v144;while true do if (v143==0) then v144=v80[2];v78[v144](v78[v144 + 1 ]);break;end end elseif (v81>15) then local v278=v80[2];local v279=v78[v278];for v323=v278 + 1 ,v80[3] do v7(v279,v78[v323]);end else local v280=v80[2];local v281={v78[v280](v13(v78,v280 + 1 ,v73))};local v282=0;for v324=v280,v80[4] do local v325=0;while true do if (0==v325) then v282=v282 + 1 ;v78[v324]=v281[v282];break;end end end end elseif (v81<=25) then if (v81<=20) then if (v81<=18) then if (v81>17) then local v145=0;local v146;local v147;local v148;while true do if (1==v145) then v148=v80[3];for v369=1,v148 do v147[v369]=v78[v146 + v369 ];end break;end if (v145==0) then v146=v80[2];v147=v78[v146];v145=1;end end else local v149=v80[2];v78[v149]=v78[v149](v13(v78,v149 + 1 ,v80[3]));end elseif (v81==19) then local v151=0;local v152;while true do if (v151==0) then v152=v80[2];v78[v152](v13(v78,v152 + 1 ,v80[3]));break;end end else local v153=v69[v80[3]];local v154;local v155={};v154=v10({},{__index=function(v250,v251) local v252=0;local v253;while true do if (v252==0) then v253=v155[v251];return v253[1][v253[2]];end end end,__newindex=function(v254,v255,v256) local v257=v155[v255];v257[1][v257[2]]=v256;end});for v259=1,v80[4] do local v260=0;local v261;while true do if (v260==0) then v72=v72 + 1 ;v261=v68[v72];v260=1;end if (v260==1) then if (v261[1]==57) then v155[v259-1 ]={v78,v261[3]};else v155[v259-1 ]={v62,v261[3]};end v77[ #v77 + 1 ]=v155;break;end end end v78[v80[2]]=v29(v153,v154,v63);end elseif (v81<=22) then if (v81>21) then v78[v80[2]][v80[3]]=v78[v80[4]];else local v159=0;local v160;while true do if (v159==0) then v160=v80[2];v78[v160]=v78[v160]();break;end end end elseif (v81<=23) then v78[v80[2]]={};elseif (v81==24) then local v283=v80[2];local v284={};for v332=1, #v77 do local v333=0;local v334;while true do if (v333==0) then v334=v77[v332];for v424=0, #v334 do local v425=v334[v424];local v426=v425[1];local v427=v425[2];if ((v426==v78) and (v427>=v283)) then v284[v427]=v426[v427];v425[1]=v284;end end break;end end end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=29) then if (v81<=27) then if (v81>26) then v78[v80[2]]=v78[v80[3]];else local v164=v80[3];local v165=v78[v164];for v262=v164 + 1 ,v80[4] do v165=v165   .. v78[v262] ;end v78[v80[2]]=v165;end elseif (v81==28) then v78[v80[2]]=v80[3];else local v169=0;local v170;while true do if (v169==0) then v170=v80[2];v78[v170](v13(v78,v170 + 1 ,v73));break;end end end elseif (v81<=31) then if (v81>30) then local v171=0;local v172;local v173;local v174;local v175;while true do if (2==v171) then for v375=v172,v73 do v175=v175 + 1 ;v78[v375]=v173[v175];end break;end if (0==v171) then v172=v80[2];v173,v174=v71(v78[v172]());v171=1;end if (v171==1) then v73=(v174 + v172) -1 ;v175=0;v171=2;end end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=32) then local v176=0;local v177;local v178;local v179;local v180;while true do if (2==v176) then for v378=v177,v73 do local v379=0;while true do if (v379==0) then v180=v180 + 1 ;v78[v378]=v178[v180];break;end end end break;end if (v176==1) then v73=(v179 + v177) -1 ;v180=0;v176=2;end if (v176==0) then v177=v80[2];v178,v179=v71(v78[v177](v78[v177 + 1 ]));v176=1;end end elseif (v81>33) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v288=v80[2];local v289=v78[v288];local v290=v80[3];for v338=1,v290 do v289[v338]=v78[v288 + v338 ];end end elseif (v81<=52) then if (v81<=43) then if (v81<=38) then if (v81<=36) then if (v81>35) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>37) then v78[v80[2]]=v63[v80[3]];elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=40) then if (v81>39) then local v183=0;local v184;while true do if (v183==0) then v184=v80[2];v78[v184]=v78[v184](v13(v78,v184 + 1 ,v73));break;end end else local v185=v80[2];local v186=v78[v80[3]];v78[v185 + 1 ]=v186;v78[v185]=v186[v80[4]];end elseif (v81<=41) then v78[v80[2]]=v29(v69[v80[3]],nil,v63);elseif (v81==42) then local v294=0;local v295;local v296;local v297;local v298;while true do if (0==v294) then v295=v80[2];v296,v297=v71(v78[v295](v13(v78,v295 + 1 ,v80[3])));v294=1;end if (v294==2) then for v419=v295,v73 do local v420=0;while true do if (v420==0) then v298=v298 + 1 ;v78[v419]=v296[v298];break;end end end break;end if (v294==1) then v73=(v297 + v295) -1 ;v298=0;v294=2;end end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=47) then if (v81<=45) then if (v81==44) then local v191=0;local v192;local v193;while true do if (v191==1) then for v381=1, #v77 do local v382=v77[v381];for v397=0, #v382 do local v398=0;local v399;local v400;local v401;while true do if (v398==1) then v401=v399[2];if ((v400==v78) and (v401>=v192)) then local v448=0;while true do if (0==v448) then v193[v401]=v400[v401];v399[1]=v193;break;end end end break;end if (v398==0) then v399=v382[v397];v400=v399[1];v398=1;end end end end break;end if (v191==0) then v192=v80[2];v193={};v191=1;end end else for v263=v80[2],v80[3] do v78[v263]=nil;end end elseif (v81==46) then local v194=0;local v195;local v196;local v197;local v198;while true do if (v194==2) then for v383=v195,v73 do local v384=0;while true do if (v384==0) then v198=v198 + 1 ;v78[v383]=v196[v198];break;end end end break;end if (v194==1) then v73=(v197 + v195) -1 ;v198=0;v194=2;end if (0==v194) then v195=v80[2];v196,v197=v71(v78[v195](v13(v78,v195 + 1 ,v80[3])));v194=1;end end else local v199=0;local v200;local v201;local v202;local v203;while true do if (v199==1) then v73=(v202 + v200) -1 ;v203=0;v199=2;end if (0==v199) then v200=v80[2];v201,v202=v71(v78[v200](v78[v200 + 1 ]));v199=1;end if (v199==2) then for v385=v200,v73 do v203=v203 + 1 ;v78[v385]=v201[v203];end break;end end end elseif (v81<=49) then if (v81==48) then v78[v80[2]]=v62[v80[3]];else local v206=0;local v207;local v208;local v209;while true do if (v206==0) then v207=v80[2];v208={v78[v207](v78[v207 + 1 ])};v206=1;end if (v206==1) then v209=0;for v388=v207,v80[4] do v209=v209 + 1 ;v78[v388]=v208[v209];end break;end end end elseif (v81<=50) then local v210=v80[2];v78[v210]=v78[v210](v78[v210 + 1 ]);elseif (v81==51) then local v301=0;local v302;while true do if (v301==0) then v302=v80[2];v78[v302](v13(v78,v302 + 1 ,v73));break;end end else local v303=0;local v304;local v305;while true do if (v303==0) then v304=v80[2];v305=v78[v80[3]];v303=1;end if (1==v303) then v78[v304 + 1 ]=v305;v78[v304]=v305[v80[4]];break;end end end elseif (v81<=61) then if (v81<=56) then if (v81<=54) then if (v81>53) then local v212=0;local v213;while true do if (v212==0) then v213=v80[2];v78[v213](v13(v78,v213 + 1 ,v80[3]));break;end end else for v265=v80[2],v80[3] do v78[v265]=nil;end end elseif (v81>55) then local v214=0;local v215;while true do if (0==v214) then v215=v80[2];v78[v215]=v78[v215]();break;end end else local v216=v80[2];v78[v216]=v78[v216](v13(v78,v216 + 1 ,v80[3]));end elseif (v81<=58) then if (v81>57) then local v218=0;local v219;while true do if (0==v218) then v219=v80[2];v78[v219](v78[v219 + 1 ]);break;end end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=59) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>60) then v78[v80[2]]=v80[3];else v78[v80[2]]();end elseif (v81<=65) then if (v81<=63) then if (v81>62) then local v222=0;local v223;while true do if (v222==0) then v223=v80[2];v78[v223]=v78[v223](v13(v78,v223 + 1 ,v73));break;end end elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==64) then local v224=0;local v225;while true do if (v224==0) then v225=v80[2];v78[v225]=v78[v225](v78[v225 + 1 ]);break;end end else local v226=0;local v227;local v228;local v229;while true do if (v226==1) then v229=0;for v391=v227,v80[4] do local v392=0;while true do if (v392==0) then v229=v229 + 1 ;v78[v391]=v228[v229];break;end end end break;end if (v226==0) then v227=v80[2];v228={v78[v227](v78[v227 + 1 ])};v226=1;end end end elseif (v81<=67) then if (v81>66) then local v230=v80[2];local v231={v78[v230](v13(v78,v230 + 1 ,v73))};local v232=0;for v267=v230,v80[4] do v232=v232 + 1 ;v78[v267]=v231[v232];end else local v233=v80[2];local v234=v80[4];local v235=v233 + 2 ;local v236={v78[v233](v78[v233 + 1 ],v78[v235])};for v270=1,v234 do v78[v235 + v270 ]=v236[v270];end local v237=v236[1];if v237 then local v310=0;while true do if (v310==0) then v78[v235]=v237;v72=v80[3];break;end end else v72=v72 + 1 ;end end elseif (v81<=68) then if (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==69) then v72=v80[3];else local v313=v69[v80[3]];local v314;local v315={};v314=v10({},{__index=function(v356,v357) local v358=0;local v359;while true do if (v358==0) then v359=v315[v357];return v359[1][v359[2]];end end end,__newindex=function(v360,v361,v362) local v363=0;local v364;while true do if (v363==0) then v364=v315[v361];v364[1][v364[2]]=v362;break;end end end});for v365=1,v80[4] do v72=v72 + 1 ;local v366=v68[v72];if (v366[1]==57) then v315[v365-1 ]={v78,v366[3]};else v315[v365-1 ]={v62,v366[3]};end v77[ #v77 + 1 ]=v315;end v78[v80[2]]=v29(v313,v314,v63);end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
