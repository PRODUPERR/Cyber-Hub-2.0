--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v88=v5(v82,v19);v19=nil;return v88;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/(2^(v32-(2 -1))))%((5 -3)^(((v33-1) -(v32-(1 -0))) + (2 -1))) ;return v83-(v83%(620 -(555 + 11 + 53))) ;else local v84=(933 -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v84 + v84))>=v84) and (928 -((1091 -(282 + 595)) + 713))) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=(3904 -2267) -(1523 + 114) ;local v36;local v37;while true do if (v35==(1 + (0 -0))) then return (v37 * (364 -108)) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + (1 -0) + 1 );v18=v18 + (1067 -(68 + 997)) ;v35=1;end end end local function v23() local v38=952 -(802 + 150) ;local v39;local v40;local v41;local v42;while true do if (v38==(351 -(87 + 263))) then return (v42 * (16777396 -(67 + (303 -190)))) + (v41 * (48056 + 17480)) + (v40 * (628 -372)) + v39 ;end if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + ((27 -12) -11) ;v38=1;end end end local function v24() local v43=v23();local v44=v23();local v45=1;local v46=(v20(v44,1,15 + 5 ) * ((999 -((2401 -(998 + 488)) + 27 + 55))^(90 -58))) + v43 ;local v47=v20(v44,13 + 8 ,40 -9 );local v48=((v20(v44,(999 + 220) -((1841 -(201 + 571)) + 118) )==(2 -1)) and  -((1139 -(116 + 1022)) -0)) or ((4 -3) + 0) ;if (v47==(0 -0)) then if (v46==(0 + 0)) then return v48 * (791 -(368 + 423)) ;else local v89=0 -0 ;while true do if (v89==0) then v47=19 -(10 + 8) ;v45=0 -0 ;break;end end end elseif (v47==(2489 -(416 + 26))) then return ((v46==(0 -0)) and (v48 * ((1 + 0)/0))) or (v48 * NaN) ;end return v8(v48,v47-(1809 -786) ) * (v45 + (v46/((440 -(145 + 293))^(482 -(26 + 18 + 386))))) ;end local function v25(v49) local v50;if  not v49 then local v85=0 -0 ;while true do if (v85==(0 -0)) then v49=v23();if (v49==(0 + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v65=886 -(261 + 624) , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=578 -(386 + 192) ;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=0;while true do if (v67~=(1206 -(696 + 510))) then else if (2==v52) then for v97=1 -0 ,v23() do local v98=0;local v99;while true do if (0==v98) then v99=v21();if (v20(v99,1263 -(1091 + 171) ,1 + 0 )==(0 -0)) then local v109=0 -0 ;local v110;local v111;local v112;while true do if (v109==3) then if (v20(v111,377 -(123 + 251) ,14 -11 )==(699 -(208 + 490))) then v112[4]=v58[v112[1 + 3 ]];end v53[v97]=v112;break;end if (v109==(0 + 0)) then local v117=0;while true do if (v117==1) then v109=837 -(660 + 176) ;break;end if (v117==0) then v110=v20(v99,2,1 + 2 );v111=v20(v99,4,6);v117=1;end end end if (v109==1) then v112={v22(),v22(),nil,nil};if (v110==(0 + 0)) then local v120=0 + 0 ;local v121;while true do if (v120~=0) then else v121=0;while true do if (v121~=0) then else v112[3 + 0 ]=v22();v112[8 -4 ]=v22();break;end end break;end end elseif (v110==(1 -0)) then v112[3]=v23();elseif (v110==(5 -3)) then v112[3]=v23() -((2 + 0)^(11 + 5)) ;elseif (v110==(399 -(115 + 281))) then local v398=0;local v399;while true do if (v398~=0) then else v399=0;while true do if (v399==0) then v112[6 -3 ]=v23() -((2 + 0)^(38 -22)) ;v112[4]=v22();break;end end break;end end end v109=7 -5 ;end if (v109==2) then if (v20(v111,868 -(550 + 317) ,1 -0 )~=(1 -0)) then else v112[2]=v58[v112[2]];end if (v20(v111,5 -3 ,2)==1) then v112[288 -(134 + 151) ]=v58[v112[3]];end v109=3;end end end break;end end end for v100=1,v23() do v54[v100-(1666 -(970 + 695)) ]=v28();end return v56;end if (0==v52) then v53={};v54={};v55={};v56={v53,v54,nil,v55};v52=1;end v67=1 -0 ;end if (v67~=1) then else if (v52~=1) then else v57=v23();v58={};for v102=1,v57 do local v103=0 -0 ;local v104;local v105;local v106;while true do if (v103==(1825 -(1195 + 629))) then v106=nil;while true do if (0==v104) then local v113=0;local v114;while true do if (v113==(0 -0)) then v114=0;while true do if (v114~=0) then else v105=v21();v106=nil;v114=1;end if (v114~=(242 -(187 + 54))) then else v104=781 -(162 + 618) ;break;end end break;end end end if (v104==(1 + 0)) then if (v105==1) then v106=v21()~=0 ;elseif (v105==2) then v106=v24();elseif (v105==(2 + 1)) then v106=v25();end v58[v102]=v106;break;end end break;end if (v103~=(0 -0)) then else local v107=0 -0 ;local v108;while true do if (0==v107) then v108=0;while true do if (v108~=0) then else v104=0 + 0 ;v105=nil;v108=1637 -(1373 + 263) ;end if (v108==1) then v103=1;break;end end break;end end end end end v56[1003 -(451 + 549) ]=v21();v52=1 + 1 ;end break;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v86=0,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + 1 ];else v78[v86]=v75[v86 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v87=0;while true do if (v87==1) then if (v81<=34) then if (v81<=16) then if (v81<=7) then if (v81<=3) then if (v81<=1) then if (v81==0) then v78[v80[2]]=v78[v80[3]][v80[4]];else v72=v80[3];end elseif (v81>2) then do return;end else local v129=0;local v130;while true do if (v129==0) then v130=v80[2];v78[v130]=v78[v130]();break;end end end elseif (v81<=5) then if (v81==4) then v78[v80[2]]=v78[v80[3]];elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==6) then local v133=0;local v134;local v135;local v136;while true do if (v133==0) then v134=v80[2];v135={v78[v134](v78[v134 + 1 ])};v133=1;end if (v133==1) then v136=0;for v351=v134,v80[4] do v136=v136 + 1 ;v78[v351]=v135[v136];end break;end end else local v137=0;local v138;local v139;local v140;while true do if (v137==1) then v140={};v139=v10({},{__index=function(v354,v355) local v356=v140[v355];return v356[1][v356[2]];end,__newindex=function(v357,v358,v359) local v360=v140[v358];v360[1][v360[2]]=v359;end});v137=2;end if (v137==2) then for v362=1,v80[4] do v72=v72 + 1 ;local v363=v68[v72];if (v363[1]==4) then v140[v362-1 ]={v78,v363[3]};else v140[v362-1 ]={v60,v363[3]};end v77[ #v77 + 1 ]=v140;end v78[v80[2]]=v29(v138,v139,v61);break;end if (v137==0) then v138=v69[v80[3]];v139=nil;v137=1;end end end elseif (v81<=11) then if (v81<=9) then if (v81==8) then local v141=0;local v142;while true do if (v141==0) then v142=v80[2];v78[v142](v13(v78,v142 + 1 ,v80[3]));break;end end elseif (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==10) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=13) then if (v81==12) then local v145=v80[2];local v146={v78[v145](v13(v78,v145 + 1 ,v73))};local v147=0;for v247=v145,v80[4] do local v248=0;while true do if (v248==0) then v147=v147 + 1 ;v78[v247]=v146[v147];break;end end end elseif (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=14) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==15) then v78[v80[2]][v80[3]]=v78[v80[4]];else local v292=v80[2];local v293=v78[v292];for v328=v292 + 1 ,v80[3] do v7(v293,v78[v328]);end end elseif (v81<=25) then if (v81<=20) then if (v81<=18) then if (v81>17) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]={};end elseif (v81==19) then local v149=0;local v150;while true do if (v149==0) then v150=v80[2];v78[v150](v13(v78,v150 + 1 ,v80[3]));break;end end else local v151=v80[2];local v152=v78[v80[3]];v78[v151 + 1 ]=v152;v78[v151]=v152[v80[4]];end elseif (v81<=22) then if (v81==21) then local v156=v80[2];local v157,v158=v71(v78[v156]());v73=(v158 + v156) -1 ;local v159=0;for v249=v156,v73 do v159=v159 + 1 ;v78[v249]=v157[v159];end else local v160=v80[2];v78[v160]=v78[v160](v78[v160 + 1 ]);end elseif (v81<=23) then local v162=v80[2];v78[v162]=v78[v162](v78[v162 + 1 ]);elseif (v81>24) then local v295=0;local v296;local v297;local v298;while true do if (v295==0) then v296=v80[2];v297=v78[v296];v295=1;end if (1==v295) then v298=v80[3];for v402=1,v298 do v297[v402]=v78[v296 + v402 ];end break;end end else local v299=v80[2];v78[v299](v78[v299 + 1 ]);end elseif (v81<=29) then if (v81<=27) then if (v81>26) then local v164=v80[2];local v165,v166=v71(v78[v164](v13(v78,v164 + 1 ,v80[3])));v73=(v166 + v164) -1 ;local v167=0;for v252=v164,v73 do local v253=0;while true do if (v253==0) then v167=v167 + 1 ;v78[v252]=v165[v167];break;end end end else local v168=0;local v169;while true do if (v168==0) then v169=v80[2];v78[v169](v78[v169 + 1 ]);break;end end end elseif (v81==28) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]]={};end elseif (v81<=31) then if (v81==30) then v78[v80[2]]();else local v173=v80[2];local v174,v175=v71(v78[v173](v78[v173 + 1 ]));v73=(v175 + v173) -1 ;local v176=0;for v254=v173,v73 do local v255=0;while true do if (v255==0) then v176=v176 + 1 ;v78[v254]=v174[v176];break;end end end end elseif (v81<=32) then local v177=0;local v178;while true do if (0==v177) then v178=v80[2];v78[v178]=v78[v178]();break;end end elseif (v81==33) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=52) then if (v81<=43) then if (v81<=38) then if (v81<=36) then if (v81==35) then v72=v80[3];else local v180=v80[2];local v181={};for v256=1, #v77 do local v257=v77[v256];for v300=0, #v257 do local v301=v257[v300];local v302=v301[1];local v303=v301[2];if ((v302==v78) and (v303>=v180)) then v181[v303]=v302[v303];v301[1]=v181;end end end end elseif (v81>37) then local v182=v69[v80[3]];local v183;local v184={};v183=v10({},{__index=function(v258,v259) local v260=v184[v259];return v260[1][v260[2]];end,__newindex=function(v261,v262,v263) local v264=v184[v262];v264[1][v264[2]]=v263;end});for v266=1,v80[4] do local v267=0;local v268;while true do if (1==v267) then if (v268[1]==4) then v184[v266-1 ]={v78,v268[3]};else v184[v266-1 ]={v60,v268[3]};end v77[ #v77 + 1 ]=v184;break;end if (v267==0) then v72=v72 + 1 ;v268=v68[v72];v267=1;end end end v78[v80[2]]=v29(v182,v183,v61);else local v186=v80[2];v78[v186]=v78[v186](v13(v78,v186 + 1 ,v80[3]));end elseif (v81<=40) then if (v81>39) then v78[v80[2]]=v61[v80[3]];else local v190=v80[2];local v191=v80[4];local v192=v190 + 2 ;local v193={v78[v190](v78[v190 + 1 ],v78[v192])};for v269=1,v191 do v78[v192 + v269 ]=v193[v269];end local v194=v193[1];if v194 then v78[v192]=v194;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81<=41) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81>42) then v78[v80[2]]();else local v306=v80[2];local v307,v308=v71(v78[v306]());v73=(v308 + v306) -1 ;local v309=0;for v333=v306,v73 do v309=v309 + 1 ;v78[v333]=v307[v309];end end elseif (v81<=47) then if (v81<=45) then if (v81==44) then v78[v80[2]]=v61[v80[3]];else for v272=v80[2],v80[3] do v78[v272]=nil;end end elseif (v81==46) then v78[v80[2]]=v80[3];else local v201=v80[2];local v202={v78[v201](v13(v78,v201 + 1 ,v73))};local v203=0;for v274=v201,v80[4] do v203=v203 + 1 ;v78[v274]=v202[v203];end end elseif (v81<=49) then if (v81>48) then local v204=0;local v205;while true do if (0==v204) then v205=v80[2];v78[v205]=v78[v205](v13(v78,v205 + 1 ,v80[3]));break;end end else v78[v80[2]]=v60[v80[3]];end elseif (v81<=50) then v78[v80[2]]=v60[v80[3]];elseif (v81>51) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v310=0;local v311;local v312;local v313;local v314;while true do if (v310==0) then v311=v80[2];v312,v313=v71(v78[v311](v78[v311 + 1 ]));v310=1;end if (v310==1) then v73=(v313 + v311) -1 ;v314=0;v310=2;end if (v310==2) then for v407=v311,v73 do v314=v314 + 1 ;v78[v407]=v312[v314];end break;end end end elseif (v81<=61) then if (v81<=56) then if (v81<=54) then if (v81>53) then local v210=0;local v211;local v212;local v213;while true do if (v210==1) then v213=v80[3];for v379=1,v213 do v212[v379]=v78[v211 + v379 ];end break;end if (0==v210) then v211=v80[2];v212=v78[v211];v210=1;end end else local v214=0;local v215;local v216;while true do if (1==v214) then for v382=v215 + 1 ,v80[4] do v216=v216   .. v78[v382] ;end v78[v80[2]]=v216;break;end if (v214==0) then v215=v80[3];v216=v78[v215];v214=1;end end end elseif (v81>55) then local v217=0;local v218;local v219;while true do if (v217==0) then v218=v80[3];v219=v78[v218];v217=1;end if (v217==1) then for v383=v218 + 1 ,v80[4] do v219=v219   .. v78[v383] ;end v78[v80[2]]=v219;break;end end else v78[v80[2]]=v29(v69[v80[3]],nil,v61);end elseif (v81<=58) then if (v81==57) then local v221=v80[2];v78[v221]=v78[v221](v13(v78,v221 + 1 ,v73));else local v223=v80[2];local v224=v78[v80[3]];v78[v223 + 1 ]=v224;v78[v223]=v224[v80[4]];end elseif (v81<=59) then local v228=v80[2];v78[v228](v13(v78,v228 + 1 ,v73));elseif (v81==60) then for v347=v80[2],v80[3] do v78[v347]=nil;end else local v315=0;local v316;while true do if (v315==0) then v316=v80[2];v78[v316](v13(v78,v316 + 1 ,v73));break;end end end elseif (v81<=65) then if (v81<=63) then if (v81>62) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v29(v69[v80[3]],nil,v61);end elseif (v81==64) then local v230=0;local v231;local v232;while true do if (v230==1) then for v384=1, #v77 do local v385=0;local v386;while true do if (v385==0) then v386=v77[v384];for v411=0, #v386 do local v412=v386[v411];local v413=v412[1];local v414=v412[2];if ((v413==v78) and (v414>=v231)) then v232[v414]=v413[v414];v412[1]=v232;end end break;end end end break;end if (v230==0) then v231=v80[2];v232={};v230=1;end end else local v233=v80[2];local v234=v80[4];local v235=v233 + 2 ;local v236={v78[v233](v78[v233 + 1 ],v78[v235])};for v277=1,v234 do v78[v235 + v277 ]=v236[v277];end local v237=v236[1];if v237 then v78[v235]=v237;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81<=67) then if (v81>66) then local v238=v80[2];local v239={v78[v238](v78[v238 + 1 ])};local v240=0;for v280=v238,v80[4] do local v281=0;while true do if (v281==0) then v240=v240 + 1 ;v78[v280]=v239[v240];break;end end end else v78[v80[2]]=v80[3];end elseif (v81<=68) then local v243=v80[2];local v244,v245=v71(v78[v243](v13(v78,v243 + 1 ,v80[3])));v73=(v245 + v243) -1 ;local v246=0;for v282=v243,v73 do local v283=0;while true do if (v283==0) then v246=v246 + 1 ;v78[v282]=v244[v246];break;end end end elseif (v81==69) then do return;end else local v320=v80[2];v78[v320]=v78[v320](v13(v78,v320 + 1 ,v73));end v72=v72 + 1 ;break;end if (0==v87) then v80=v68[v72];v81=v80[1];v87=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
